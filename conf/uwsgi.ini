[uwsgi]
# Set conda env
venv = /opt/conda/envs/py-debian-conda-flask-template

# Set application settings
module = app.main:app

# uwsgi user settings
uid = appuser
socket = /app/uwsgi.sock
chown-socket = appuser:appuser

# uwsgi base settings
strict = true                   ; fail to start if any parameter isn't explicitly understood by uwsgi
master = true                   ; gracefully re-spawn and pre-fork workers
buffer-size = 65535             ; set buffer size override to maximum allowed
enable-threads = true           ; enable threading
single-interpreter = true       ; disable multiple interpreter mode
die-on-term = true              ; shutdown application on SIGTERM
need-app = true                 ; prevents uwsgi from starting if it is unable to find or load application module

# define worker processes (define UWSGI_CHEAPER, UWSGI_PROCESSES in environment variables for dynamic values)
cheaper = 2                     ; explicitly set minimum number of workers
max-requests = 1000             ; restart workers after this number of requests
max-worker-lifetime = 3600      ; restart workers after this many seconds
reload-on-rss = 2048            ; restart workers after this much resident memory in megabytes
worker-reload-mercy = 300       ; how long to wait before forcefully killing workers on shutdown/timeout

# uwsgi logging settings (does not apply to python log output)
disable-logging = false          ; disable built-in logging from uwsgi
log-4xx = true                  ; override to log 400 level errors
log-5xx = true                  ; override to log 500 level errors